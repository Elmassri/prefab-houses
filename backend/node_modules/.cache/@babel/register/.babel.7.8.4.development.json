{
  "{\"sourceRoot\":\"/home/sandra/Desktop/prefab-houses/backend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/sandra/Desktop/prefab-houses/backend\",\"filename\":\"/home/sandra/Desktop/prefab-houses/backend/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/sandra/Desktop/prefab-houses/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/sandra/Desktop/prefab-houses/backend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/sandra/Desktop/prefab-houses/backend",
      "filename": "/home/sandra/Desktop/prefab-houses/backend/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/sandra/Desktop/prefab-houses/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/sandra/Desktop/prefab-houses/backend/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/sandra/Desktop/prefab-houses/backend/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/sandra/Desktop/prefab-houses/backend/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"./app\"));\n\nvar _db = _interopRequireDefault(require(\"./db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar start =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee15() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            controller = _context15.sent;\n\n            _app[\"default\"].get('/', function (req, res, next) {\n              try {\n                res.json({\n                  message: \"Hello\"\n                });\n              } catch (err) {\n                next(err);\n              }\n            });\n\n            _app[\"default\"].get('/Subscribe',\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(req, res, next) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return controller.ReadSubscribe();\n\n                      case 3:\n                        result = _context.sent;\n                        res.send(result);\n                        _context.next = 10;\n                        break;\n\n                      case 7:\n                        _context.prev = 7;\n                        _context.t0 = _context[\"catch\"](0);\n                        next(_context.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 7]]);\n              }));\n\n              return function (_x, _x2, _x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get('/Subscribe/create',\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(req, res, next) {\n                var _req$query, location, email, result;\n\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _req$query = req.query, location = _req$query.location, email = _req$query.email;\n                        _context2.prev = 1;\n                        _context2.next = 4;\n                        return controller.CreateSubscribe({\n                          location: location,\n                          email: email\n                        });\n\n                      case 4:\n                        result = _context2.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context2.next = 11;\n                        break;\n\n                      case 8:\n                        _context2.prev = 8;\n                        _context2.t0 = _context2[\"catch\"](1);\n                        next(_context2.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[1, 8]]);\n              }));\n\n              return function (_x4, _x5, _x6) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get(\"/Subscribe/delete\",\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(req, res, next) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        id = req.query.id;\n                        _context3.prev = 1;\n                        _context3.next = 4;\n                        return controller.DeleteSubscribe(id);\n\n                      case 4:\n                        result = _context3.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context3.next = 11;\n                        break;\n\n                      case 8:\n                        _context3.prev = 8;\n                        _context3.t0 = _context3[\"catch\"](1);\n                        next(_context3.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[1, 8]]);\n              }));\n\n              return function (_x7, _x8, _x9) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get(\"/Subscribe/update\",\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(req, res, next) {\n                var _req$query2, id, location, email, result;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _req$query2 = req.query, id = _req$query2.id, location = _req$query2.location, email = _req$query2.email;\n                        _context4.prev = 1;\n                        _context4.next = 4;\n                        return controller.UpdateSubscribe(id, {\n                          location: location,\n                          email: email\n                        });\n\n                      case 4:\n                        result = _context4.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context4.next = 11;\n                        break;\n\n                      case 8:\n                        _context4.prev = 8;\n                        _context4.t0 = _context4[\"catch\"](1);\n                        next(_context4.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[1, 8]]);\n              }));\n\n              return function (_x10, _x11, _x12) {\n                return _ref5.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get('/Admin',\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(req, res, next) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.prev = 0;\n                        _context5.next = 3;\n                        return controller.ReadAdmin();\n\n                      case 3:\n                        result = _context5.sent;\n                        res.send(result);\n                        _context5.next = 10;\n                        break;\n\n                      case 7:\n                        _context5.prev = 7;\n                        _context5.t0 = _context5[\"catch\"](0);\n                        next(_context5.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[0, 7]]);\n              }));\n\n              return function (_x13, _x14, _x15) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get('/Admin/create',\n            /*#__PURE__*/\n            function () {\n              var _ref7 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee6(req, res, next) {\n                var _req$query3, username, password, result;\n\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _req$query3 = req.query, username = _req$query3.username, password = _req$query3.password;\n                        _context6.prev = 1;\n                        _context6.next = 4;\n                        return controller.CreateAdmin({\n                          username: username,\n                          password: password\n                        });\n\n                      case 4:\n                        result = _context6.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context6.next = 11;\n                        break;\n\n                      case 8:\n                        _context6.prev = 8;\n                        _context6.t0 = _context6[\"catch\"](1);\n                        next(_context6.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[1, 8]]);\n              }));\n\n              return function (_x16, _x17, _x18) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get(\"/Admin/delete\",\n            /*#__PURE__*/\n            function () {\n              var _ref8 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee7(req, res, next) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        id = req.query.id;\n                        _context7.prev = 1;\n                        _context7.next = 4;\n                        return controller.DeleteAdmin(id);\n\n                      case 4:\n                        result = _context7.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context7.next = 11;\n                        break;\n\n                      case 8:\n                        _context7.prev = 8;\n                        _context7.t0 = _context7[\"catch\"](1);\n                        next(_context7.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[1, 8]]);\n              }));\n\n              return function (_x19, _x20, _x21) {\n                return _ref8.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get(\"/Admin/update\",\n            /*#__PURE__*/\n            function () {\n              var _ref9 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee8(req, res, next) {\n                var _req$query4, id, username, password, result;\n\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        _req$query4 = req.query, id = _req$query4.id, username = _req$query4.username, password = _req$query4.password;\n                        _context8.prev = 1;\n                        _context8.next = 4;\n                        return controller.UpdateAdmin(id, {\n                          username: username,\n                          password: password\n                        });\n\n                      case 4:\n                        result = _context8.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context8.next = 11;\n                        break;\n\n                      case 8:\n                        _context8.prev = 8;\n                        _context8.t0 = _context8[\"catch\"](1);\n                        next(_context8.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[1, 8]]);\n              }));\n\n              return function (_x22, _x23, _x24) {\n                return _ref9.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get('/Product',\n            /*#__PURE__*/\n            function () {\n              var _ref10 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee9(req, res, next) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.prev = 0;\n                        _context9.next = 3;\n                        return controller.ReadProduct();\n\n                      case 3:\n                        result = _context9.sent;\n                        res.send(result);\n                        _context9.next = 10;\n                        break;\n\n                      case 7:\n                        _context9.prev = 7;\n                        _context9.t0 = _context9[\"catch\"](0);\n                        next(_context9.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9, null, [[0, 7]]);\n              }));\n\n              return function (_x25, _x26, _x27) {\n                return _ref10.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get('/Product/create',\n            /*#__PURE__*/\n            function () {\n              var _ref11 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee10(req, res, next) {\n                var typename, result;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        typename = req.query.typename;\n                        _context10.prev = 1;\n                        _context10.next = 4;\n                        return controller.CreateProduct({\n                          typename: typename\n                        });\n\n                      case 4:\n                        result = _context10.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context10.next = 11;\n                        break;\n\n                      case 8:\n                        _context10.prev = 8;\n                        _context10.t0 = _context10[\"catch\"](1);\n                        next(_context10.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[1, 8]]);\n              }));\n\n              return function (_x28, _x29, _x30) {\n                return _ref11.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get(\"/Product/delete\",\n            /*#__PURE__*/\n            function () {\n              var _ref12 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee11(req, res, next) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        id = req.query.id;\n                        _context11.prev = 1;\n                        _context11.next = 4;\n                        return controller.DeleteProduct(id);\n\n                      case 4:\n                        result = _context11.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context11.next = 11;\n                        break;\n\n                      case 8:\n                        _context11.prev = 8;\n                        _context11.t0 = _context11[\"catch\"](1);\n                        // console.log(err)\n                        next(_context11.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11, null, [[1, 8]]);\n              }));\n\n              return function (_x31, _x32, _x33) {\n                return _ref12.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get(\"/Product/update\",\n            /*#__PURE__*/\n            function () {\n              var _ref13 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee12(req, res, next) {\n                var _req$query5, id, typename, result;\n\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        _req$query5 = req.query, id = _req$query5.id, typename = _req$query5.typename;\n                        _context12.prev = 1;\n                        _context12.next = 4;\n                        return controller.UpdateProduct(id, {\n                          typename: typename\n                        });\n\n                      case 4:\n                        result = _context12.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context12.next = 11;\n                        break;\n\n                      case 8:\n                        _context12.prev = 8;\n                        _context12.t0 = _context12[\"catch\"](1);\n                        next(_context12.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12, null, [[1, 8]]);\n              }));\n\n              return function (_x34, _x35, _x36) {\n                return _ref13.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get('/Color',\n            /*#__PURE__*/\n            function () {\n              var _ref14 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee13(req, res, next) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        _context13.prev = 0;\n                        _context13.next = 3;\n                        return controller.ReadColor();\n\n                      case 3:\n                        result = _context13.sent;\n                        res.send(result);\n                        _context13.next = 10;\n                        break;\n\n                      case 7:\n                        _context13.prev = 7;\n                        _context13.t0 = _context13[\"catch\"](0);\n                        next(_context13.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee13, null, [[0, 7]]);\n              }));\n\n              return function (_x37, _x38, _x39) {\n                return _ref14.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get(\"/Color/update\",\n            /*#__PURE__*/\n            function () {\n              var _ref15 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee14(req, res, next) {\n                var _req$query6, type, color, result;\n\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                  while (1) {\n                    switch (_context14.prev = _context14.next) {\n                      case 0:\n                        _req$query6 = req.query, type = _req$query6.type, color = _req$query6.color;\n                        _context14.prev = 1;\n                        _context14.next = 4;\n                        return controller.UpdateColor({\n                          type: type,\n                          color: color\n                        });\n\n                      case 4:\n                        result = _context14.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context14.next = 11;\n                        break;\n\n                      case 8:\n                        _context14.prev = 8;\n                        _context14.t0 = _context14[\"catch\"](1);\n                        next(_context14.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }\n                }, _callee14, null, [[1, 8]]);\n              }));\n\n              return function (_x40, _x41, _x42) {\n                return _ref15.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].use(function (err, req, res, next) {\n              res.status(500).json({\n                success: false,\n                message: err.message\n              });\n            });\n\n            _app[\"default\"].listen(8080, function () {\n              console.log(\"Listening on port 8080\");\n            });\n\n          case 20:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "start",
        "controller",
        "app",
        "get",
        "req",
        "res",
        "next",
        "json",
        "message",
        "err",
        "ReadSubscribe",
        "result",
        "send",
        "query",
        "location",
        "email",
        "CreateSubscribe",
        "success",
        "id",
        "DeleteSubscribe",
        "UpdateSubscribe",
        "ReadAdmin",
        "username",
        "password",
        "CreateAdmin",
        "DeleteAdmin",
        "UpdateAdmin",
        "ReadProduct",
        "typename",
        "CreateProduct",
        "DeleteProduct",
        "UpdateProduct",
        "ReadColor",
        "type",
        "color",
        "UpdateColor",
        "use",
        "status",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;AACA;;;;;;;;AAEA,IAAMA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIa,qBAJb;;AAAA;AAINC,YAAAA,UAJM;;AAKZC,4BAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AAC7B,kBAAG;AACDD,gBAAAA,GAAG,CAACE,IAAJ,CAAS;AAACC,kBAAAA,OAAO,EAAC;AAAT,iBAAT;AACD,eAFD,CAEE,OAAMC,GAAN,EAAU;AACRH,gBAAAA,IAAI,CAACG,GAAD,CAAJ;AACH;AACF,aAND;;AAiBAP,4BAAIC,GAAJ,CAAQ,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAsB,iBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEGL,UAAU,CAACS,aAAX,EAFH;;AAAA;AAEZC,wBAAAA,MAFY;AAGlBN,wBAAAA,GAAG,CAACO,IAAJ,CAASD,MAAT;AAHkB;AAAA;;AAAA;AAAA;AAAA;AAKlBL,wBAAAA,IAAI,aAAJ;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtB;;AAAA;AAAA;AAAA;AAAA;;AASAJ,4BAAIC,GAAJ,CAAQ,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA6B,kBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qCACEF,GAAG,CAACS,KADN,EACnBC,QADmB,cACnBA,QADmB,EACRC,KADQ,cACRA,KADQ;AAAA;AAAA;AAAA,+BAGJd,UAAU,CAACe,eAAX,CAA2B;AAACF,0BAAAA,QAAQ,EAARA,QAAD;AAAYC,0BAAAA,KAAK,EAALA;AAAZ,yBAA3B,CAHI;;AAAA;AAGnBJ,wBAAAA,MAHmB;AAIzBN,wBAAAA,GAAG,CAACE,IAAJ,CAAS;AAACU,0BAAAA,OAAO,EAAG,IAAX;AAAkBN,0BAAAA,MAAM,EAANA;AAAlB,yBAAT;AAJyB;AAAA;;AAAA;AAAA;AAAA;AAMzBL,wBAAAA,IAAI,cAAJ;;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA7B;;AAAA;AAAA;AAAA;AAAA;;AAUAJ,4BAAIC,GAAJ,CAAQ,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA6B,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBY,wBAAAA,EADmB,GACZd,GAAG,CAACS,KADQ,CACnBK,EADmB;AAAA;AAAA;AAAA,+BAGJjB,UAAU,CAACkB,eAAX,CAA2BD,EAA3B,CAHI;;AAAA;AAGnBP,wBAAAA,MAHmB;AAIzBN,wBAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEU,0BAAAA,OAAO,EAAE,IAAX;AAAiBN,0BAAAA,MAAM,EAANA;AAAjB,yBAAT;AAJyB;AAAA;;AAAA;AAAA;AAAA;AAMzBL,wBAAAA,IAAI,cAAJ;;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA7B;;AAAA;AAAA;AAAA;AAAA;;AAUAJ,4BAAIC,GAAJ,CAAQ,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA6B,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCACKF,GAAG,CAACS,KADT,EACnBK,EADmB,eACnBA,EADmB,EACfJ,QADe,eACfA,QADe,EACLC,KADK,eACLA,KADK;AAAA;AAAA;AAAA,+BAGJd,UAAU,CAACmB,eAAX,CAA2BF,EAA3B,EAA+B;AAAEJ,0BAAAA,QAAQ,EAARA,QAAF;AAAYC,0BAAAA,KAAK,EAALA;AAAZ,yBAA/B,CAHI;;AAAA;AAGnBJ,wBAAAA,MAHmB;AAIzBN,wBAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEU,0BAAAA,OAAO,EAAE,IAAX;AAAiBN,0BAAAA,MAAM,EAANA;AAAjB,yBAAT;AAJyB;AAAA;;AAAA;AAAA;AAAA;AAMzBL,wBAAAA,IAAI,cAAJ;;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA7B;;AAAA;AAAA;AAAA;AAAA;;AAqBAJ,4BAAIC,GAAJ,CAAQ,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkB,kBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEOL,UAAU,CAACoB,SAAX,EAFP;;AAAA;AAERV,wBAAAA,MAFQ;AAGdN,wBAAAA,GAAG,CAACO,IAAJ,CAASD,MAAT;AAHc;AAAA;;AAAA;AAAA;AAAA;AAKdL,wBAAAA,IAAI,cAAJ;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlB;;AAAA;AAAA;AAAA;AAAA;;AASAJ,4BAAIC,GAAJ,CAAQ,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAyB,kBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCACSF,GAAG,CAACS,KADb,EACfS,QADe,eACfA,QADe,EACJC,QADI,eACJA,QADI;AAAA;AAAA;AAAA,+BAGAtB,UAAU,CAACuB,WAAX,CAAuB;AAACF,0BAAAA,QAAQ,EAARA,QAAD;AAAYC,0BAAAA,QAAQ,EAARA;AAAZ,yBAAvB,CAHA;;AAAA;AAGfZ,wBAAAA,MAHe;AAIrBN,wBAAAA,GAAG,CAACE,IAAJ,CAAS;AAACU,0BAAAA,OAAO,EAAG,IAAX;AAAkBN,0BAAAA,MAAM,EAANA;AAAlB,yBAAT;AAJqB;AAAA;;AAAA;AAAA;AAAA;AAMrBL,wBAAAA,IAAI,cAAJ;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAzB;;AAAA;AAAA;AAAA;AAAA;;AAUAJ,4BAAIC,GAAJ,CAAQ,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAyB,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACfY,wBAAAA,EADe,GACRd,GAAG,CAACS,KADI,CACfK,EADe;AAAA;AAAA;AAAA,+BAGAjB,UAAU,CAACwB,WAAX,CAAuBP,EAAvB,CAHA;;AAAA;AAGfP,wBAAAA,MAHe;AAIrBN,wBAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEU,0BAAAA,OAAO,EAAE,IAAX;AAAiBN,0BAAAA,MAAM,EAANA;AAAjB,yBAAT;AAJqB;AAAA;;AAAA;AAAA;AAAA;AAMrBL,wBAAAA,IAAI,cAAJ;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAzB;;AAAA;AAAA;AAAA;AAAA;;AAUAJ,4BAAIC,GAAJ,CAAQ,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAyB,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCACYF,GAAG,CAACS,KADhB,EACfK,EADe,eACfA,EADe,EACXI,QADW,eACXA,QADW,EACDC,QADC,eACDA,QADC;AAAA;AAAA;AAAA,+BAGAtB,UAAU,CAACyB,WAAX,CAAuBR,EAAvB,EAA2B;AAAEI,0BAAAA,QAAQ,EAARA,QAAF;AAAYC,0BAAAA,QAAQ,EAARA;AAAZ,yBAA3B,CAHA;;AAAA;AAGfZ,wBAAAA,MAHe;AAIrBN,wBAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEU,0BAAAA,OAAO,EAAE,IAAX;AAAiBN,0BAAAA,MAAM,EAANA;AAAjB,yBAAT;AAJqB;AAAA;;AAAA;AAAA;AAAA;AAMrBL,wBAAAA,IAAI,cAAJ;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAzB;;AAAA;AAAA;AAAA;AAAA;;AAmBAJ,4BAAIC,GAAJ,CAAQ,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAoB,kBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEKL,UAAU,CAAC0B,WAAX,EAFL;;AAAA;AAEVhB,wBAAAA,MAFU;AAGhBN,wBAAAA,GAAG,CAACO,IAAJ,CAASD,MAAT;AAHgB;AAAA;;AAAA;AAAA;AAAA;AAKhBL,wBAAAA,IAAI,cAAJ;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApB;;AAAA;AAAA;AAAA;AAAA;;AASAJ,4BAAIC,GAAJ,CAAQ,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA2B,mBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBsB,wBAAAA,QADiB,GACJxB,GAAG,CAACS,KADA,CACjBe,QADiB;AAAA;AAAA;AAAA,+BAGF3B,UAAU,CAAC4B,aAAX,CAAyB;AAACD,0BAAAA,QAAQ,EAARA;AAAD,yBAAzB,CAHE;;AAAA;AAGjBjB,wBAAAA,MAHiB;AAIvBN,wBAAAA,GAAG,CAACE,IAAJ,CAAS;AAACU,0BAAAA,OAAO,EAAG,IAAX;AAAkBN,0BAAAA,MAAM,EAANA;AAAlB,yBAAT;AAJuB;AAAA;;AAAA;AAAA;AAAA;AAMvBL,wBAAAA,IAAI,eAAJ;;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B;;AAAA;AAAA;AAAA;AAAA;;AAUAJ,4BAAIC,GAAJ,CAAQ,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA2B,mBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBY,wBAAAA,EADiB,GACVd,GAAG,CAACS,KADM,CACjBK,EADiB;AAAA;AAAA;AAAA,+BAGFjB,UAAU,CAAC6B,aAAX,CAAyBZ,EAAzB,CAHE;;AAAA;AAGjBP,wBAAAA,MAHiB;AAIvBN,wBAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEU,0BAAAA,OAAO,EAAE,IAAX;AAAiBN,0BAAAA,MAAM,EAANA;AAAjB,yBAAT;AAJuB;AAAA;;AAAA;AAAA;AAAA;AAMxB;AACCL,wBAAAA,IAAI,eAAJ;;AAPuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B;;AAAA;AAAA;AAAA;AAAA;;AAWAJ,4BAAIC,GAAJ,CAAQ,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA2B,mBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCACDF,GAAG,CAACS,KADH,EACjBK,EADiB,eACjBA,EADiB,EACbU,QADa,eACbA,QADa;AAAA;AAAA;AAAA,+BAGF3B,UAAU,CAAC8B,aAAX,CAAyBb,EAAzB,EAA6B;AAAEU,0BAAAA,QAAQ,EAARA;AAAF,yBAA7B,CAHE;;AAAA;AAGjBjB,wBAAAA,MAHiB;AAIvBN,wBAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEU,0BAAAA,OAAO,EAAE,IAAX;AAAiBN,0BAAAA,MAAM,EAANA;AAAjB,yBAAT;AAJuB;AAAA;;AAAA;AAAA;AAAA;AAMvBL,wBAAAA,IAAI,eAAJ;;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B;;AAAA;AAAA;AAAA;AAAA;;AAgBAJ,4BAAIC,GAAJ,CAAQ,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkB,mBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEOL,UAAU,CAAC+B,SAAX,EAFP;;AAAA;AAERrB,wBAAAA,MAFQ;AAGdN,wBAAAA,GAAG,CAACO,IAAJ,CAASD,MAAT;AAHc;AAAA;;AAAA;AAAA;AAAA;AAKdL,wBAAAA,IAAI,eAAJ;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlB;;AAAA;AAAA;AAAA;AAAA;;AASAJ,4BAAIC,GAAJ,CAAQ,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAyB,mBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCACCF,GAAG,CAACS,KADL,EACfoB,IADe,eACfA,IADe,EACTC,KADS,eACTA,KADS;AAAA;AAAA;AAAA,+BAGAjC,UAAU,CAACkC,WAAX,CAAuB;AAAEF,0BAAAA,IAAI,EAAJA,IAAF;AAAQC,0BAAAA,KAAK,EAALA;AAAR,yBAAvB,CAHA;;AAAA;AAGfvB,wBAAAA,MAHe;AAIrBN,wBAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEU,0BAAAA,OAAO,EAAE,IAAX;AAAiBN,0BAAAA,MAAM,EAANA;AAAjB,yBAAT;AAJqB;AAAA;;AAAA;AAAA;AAAA;AAMrBL,wBAAAA,IAAI,eAAJ;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAzB;;AAAA;AAAA;AAAA;AAAA;;AAkBAJ,4BAAIkC,GAAJ,CAAQ,UAAC3B,GAAD,EAAML,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/BD,cAAAA,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgB9B,IAAhB,CAAqB;AAAEU,gBAAAA,OAAO,EAAE,KAAX;AAAkBT,gBAAAA,OAAO,EAAEC,GAAG,CAACD;AAA/B,eAArB;AACD,aAFD;;AAIAN,4BAAIoC,MAAJ,CAAW,IAAX,EAAiB,YAAI;AAACC,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAAsC,aAA5D;;AArMY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALxC,KAAK;AAAA;AAAA;AAAA,GAAX;;AA0MAA,KAAK",
      "sourceRoot": "/home/sandra/Desktop/prefab-houses/backend/src",
      "sourcesContent": [
        "//import {createServer} from 'http';\nimport app from './app';\nimport initializeDatabase from './db';\n\nconst start = async()=>{\n\n\n\n  const controller = await initializeDatabase();\n  app.get('/', (req, res, next)=>{\n    try{\n      res.json({message:\"Hello\"});\n    } catch(err){\n        next(err);\n    }\n  });\n  \n\n\n\n\n\n\n\n\n\n  app.get('/Subscribe', async(req, res, next)=>{\n    try{\n      const result = await controller.ReadSubscribe();\n      res.send(result);\n    } catch(err){\n      next(err)\n    }\n  });\n\n  app.get('/Subscribe/create', async(req, res, next)=>{\n    const { location , email } = req.query;\n    try{\n      const result = await controller.CreateSubscribe({location , email });\n      res.json({success : true , result});\n    } catch(err){\n      next(err)\n    } \n  });\n\n  app.get(\"/Subscribe/delete\", async (req, res, next) => {\n    const { id } = req.query;\n    try {\n      const result = await controller.DeleteSubscribe(id);\n      res.json({ success: true, result });\n    } catch (err) {\n      next(err);\n    }\n  });\n\n  app.get(\"/Subscribe/update\", async (req, res, next) => {\n    const { id, location, email } = req.query;\n    try {\n      const result = await controller.UpdateSubscribe(id, { location, email });\n      res.json({ success: true, result });\n    } catch (err) {\n      next(err);\n    }\n  });\n\n\n\n\n\n\n\n\n\n\n\n\n  app.get('/Admin', async(req, res, next)=>{\n    try{\n      const result = await controller.ReadAdmin();\n      res.send(result);\n    } catch(err){\n      next(err)\n    }\n  });\n\n  app.get('/Admin/create', async(req, res, next)=>{\n    const { username , password } = req.query;\n    try{\n      const result = await controller.CreateAdmin({username , password });\n      res.json({success : true , result});\n    } catch(err){\n      next(err)\n    } \n  });\n\n  app.get(\"/Admin/delete\", async (req, res, next) => {\n    const { id } = req.query;\n    try {\n      const result = await controller.DeleteAdmin(id);\n      res.json({ success: true, result });\n    } catch (err) {\n      next(err);\n    }\n  });\n\n  app.get(\"/Admin/update\", async (req, res, next) => {\n    const { id, username, password } = req.query;\n    try {\n      const result = await controller.UpdateAdmin(id, { username, password });\n      res.json({ success: true, result });\n    } catch (err) {\n      next(err);\n    }\n  });\n\n\n\n\n\n\n\n\n\n\n  app.get('/Product', async(req, res, next)=>{\n    try{\n      const result = await controller.ReadProduct();\n      res.send(result);\n    } catch(err){\n      next(err)\n    }\n  });\n\n  app.get('/Product/create', async(req, res, next)=>{\n    const { typename } = req.query;\n    try{\n      const result = await controller.CreateProduct({typename});\n      res.json({success : true , result});\n    } catch(err){\n      next(err)\n    } \n  });\n\n  app.get(\"/Product/delete\", async (req, res, next) => {\n    const { id } = req.query;\n    try {\n      const result = await controller.DeleteProduct(id);\n      res.json({ success: true, result });\n    } catch (err) {\n     // console.log(err)\n      next(err);\n    }\n  });\n\n  app.get(\"/Product/update\", async (req, res, next) => {\n    const { id, typename} = req.query;\n    try {\n      const result = await controller.UpdateProduct(id, { typename});\n      res.json({ success: true, result });\n    } catch (err) {\n      next(err);\n    }\n  });\n\n\n\n\n\n\n\n  app.get('/Color', async(req, res, next)=>{\n    try{\n      const result = await controller.ReadColor();\n      res.send(result);\n    } catch(err){\n      next(err)\n    }\n  });\n\n  app.get(\"/Color/update\", async (req, res, next) => {\n    const { type, color } = req.query;\n    try {\n      const result = await controller.UpdateColor({ type, color });\n      res.json({ success: true, result });\n    } catch (err) {\n      next(err);\n    }\n  });\n\n\n\n\n\n\n\n\n\n  app.use((err, req, res, next) => {\n    res.status(500).json({ success: false, message: err.message });\n  });\n\n  app.listen(8080, ()=>{console.log(\"Listening on port 8080\")});\n  \n  \n\n}\nstart()\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582030472523
  },
  "{\"sourceRoot\":\"/home/sandra/Desktop/prefab-houses/backend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/sandra/Desktop/prefab-houses/backend\",\"filename\":\"/home/sandra/Desktop/prefab-houses/backend/src/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/sandra/Desktop/prefab-houses/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/sandra/Desktop/prefab-houses/backend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/sandra/Desktop/prefab-houses/backend",
      "filename": "/home/sandra/Desktop/prefab-houses/backend/src/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/sandra/Desktop/prefab-houses/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/sandra/Desktop/prefab-houses/backend/src/app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/sandra/Desktop/prefab-houses/backend/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/sandra/Desktop/prefab-houses/backend/src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n;\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUQ4QjtBQUc5QixJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVI7ZUFDZUQsRyIsInNvdXJjZVJvb3QiOiIvaG9tZS9zYW5kcmEvRGVza3RvcC9wcmVmYWItaG91c2VzL2JhY2tlbmQvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7O1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmFwcC51c2UoY29ycygpKTtcbmV4cG9ydCBkZWZhdWx0IGFwcDtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAD8B;AAG9B,IAAMA,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;eACeD,G",
      "sourceRoot": "/home/sandra/Desktop/prefab-houses/backend/src",
      "sourcesContent": [
        "import express from 'express';;\nimport cors from 'cors';\n\nconst app = express();\napp.use(cors());\nexport default app;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581928044385
  },
  "{\"sourceRoot\":\"/home/sandra/Desktop/prefab-houses/backend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/sandra/Desktop/prefab-houses/backend\",\"filename\":\"/home/sandra/Desktop/prefab-houses/backend/src/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/sandra/Desktop/prefab-houses/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/sandra/Desktop/prefab-houses/backend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/sandra/Desktop/prefab-houses/backend",
      "filename": "/home/sandra/Desktop/prefab-houses/backend/src/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/sandra/Desktop/prefab-houses/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/sandra/Desktop/prefab-houses/backend/src/db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/sandra/Desktop/prefab-houses/backend/src/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/sandra/Desktop/prefab-houses/backend/src",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee15() {\n    var db, ReadSubscribe, CreateSubscribe, DeleteSubscribe, UpdateSubscribe, ReadAdmin, CreateAdmin, DeleteAdmin, UpdateAdmin, ReadProduct, CreateProduct, DeleteProduct, UpdateProduct, ReadColor, UpdateColor, controller;\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.next = 2;\n            return _sqlite[\"default\"].open('./database1.sqlite');\n\n          case 2:\n            db = _context15.sent;\n\n            ReadSubscribe =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee() {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return db.all(\"SELECT * FROM Subscribe order by Location \");\n\n                      case 3:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Subcribe are empty!\");\n\n                      case 6:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context.prev = 9;\n                        _context.t0 = _context[\"catch\"](0);\n                        throw new Error(\"Could not retrieve any Subscriber\");\n\n                      case 12:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 9]]);\n              }));\n\n              return function ReadSubscribe() {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            CreateSubscribe =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(props) {\n                var location, email, result, id;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        location = props.location, email = props.email;\n\n                        if (!(!props || !location || !email)) {\n                          _context2.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a location and email\");\n\n                      case 3:\n                        _context2.prev = 3;\n                        _context2.next = 6;\n                        return db.run(\"INSERT INTO Subscribe (Location,Email) VALUES ('\".concat(location, \"', '\").concat(email, \"')\"));\n\n                      case 6:\n                        result = _context2.sent;\n                        id = result.stmt.lastID;\n                        return _context2.abrupt(\"return\", id);\n\n                      case 11:\n                        _context2.prev = 11;\n                        _context2.t0 = _context2[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 14:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[3, 11]]);\n              }));\n\n              return function CreateSubscribe(_x) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            DeleteSubscribe =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return db.run(\"DELETE FROM Subscribe WHERE ID = \".concat(id));\n\n                      case 3:\n                        result = _context3.sent;\n\n                        if (!(result.stmt.changes === 0)) {\n                          _context3.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Subscribe with id \".concat(id, \" doesn't exist\"));\n\n                      case 6:\n                        return _context3.abrupt(\"return\", true);\n\n                      case 9:\n                        _context3.prev = 9;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        throw new Error(\"could not delete subscriber with id \".concat(id) + _context3.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 9]]);\n              }));\n\n              return function DeleteSubscribe(_x2) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            UpdateSubscribe =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id, props) {\n                var location, email, stmt, result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        location = props.location, email = props.email;\n\n                        if (!(!props && !(props.location && props.email))) {\n                          _context4.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a location or an email\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (location && email) {\n                          stmt = \"update Subscribe set Location = '\".concat(location, \"', Email = '\").concat(email, \"' where ID = \").concat(id, \" \");\n                          console.log(stmt);\n                        } else if (location && !email) {\n                          stmt = \"update Subscribe set Location = '\".concat(location, \"' where ID = \").concat(id, \" \");\n                        } else {\n                          stmt = \"update Subscribe set  Email = '\".concat(email, \"' where ID = \").concat(id, \" \");\n                        }\n\n                        _context4.prev = 5;\n                        _context4.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context4.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Subscribe with ID \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 15:\n                        _context4.prev = 15;\n                        _context4.t0 = _context4[\"catch\"](5);\n                        throw new Error(\"Could not update Subscribe with ID \".concat(id) + _context4.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[5, 15]]);\n              }));\n\n              return function UpdateSubscribe(_x3, _x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            ReadAdmin =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5() {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.prev = 0;\n                        _context5.next = 3;\n                        return db.all(\"SELECT * FROM Admin order by UserName \");\n\n                      case 3:\n                        rows = _context5.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context5.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Admin list are empty!\");\n\n                      case 6:\n                        return _context5.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context5.prev = 9;\n                        _context5.t0 = _context5[\"catch\"](0);\n                        throw new Error(\"Could not retrieve any Admin\");\n\n                      case 12:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[0, 9]]);\n              }));\n\n              return function ReadAdmin() {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            CreateAdmin =\n            /*#__PURE__*/\n            function () {\n              var _ref7 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee6(props) {\n                var username, password, result, id;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        username = props.username, password = props.password;\n\n                        if (!(!props || !username || !password)) {\n                          _context6.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide an username and password\");\n\n                      case 3:\n                        _context6.prev = 3;\n                        _context6.next = 6;\n                        return db.run(\"INSERT INTO Admin (UserName,UserPassword) VALUES ('\".concat(username, \"', '\").concat(password, \"')\"));\n\n                      case 6:\n                        result = _context6.sent;\n                        id = result.stmt.lastID;\n                        return _context6.abrupt(\"return\", id);\n\n                      case 11:\n                        _context6.prev = 11;\n                        _context6.t0 = _context6[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 14:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[3, 11]]);\n              }));\n\n              return function CreateAdmin(_x5) {\n                return _ref7.apply(this, arguments);\n              };\n            }();\n\n            DeleteAdmin =\n            /*#__PURE__*/\n            function () {\n              var _ref8 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee7(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.prev = 0;\n                        _context7.next = 3;\n                        return db.run(\"DELETE FROM Admin WHERE ID = \".concat(id));\n\n                      case 3:\n                        result = _context7.sent;\n\n                        if (!(result.stmt.changes === 0)) {\n                          _context7.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Admin with id \".concat(id, \" doesn't exist\"));\n\n                      case 6:\n                        return _context7.abrupt(\"return\", true);\n\n                      case 9:\n                        _context7.prev = 9;\n                        _context7.t0 = _context7[\"catch\"](0);\n                        throw new Error(\"could not delete admin with id \".concat(id) + _context7.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[0, 9]]);\n              }));\n\n              return function DeleteAdmin(_x6) {\n                return _ref8.apply(this, arguments);\n              };\n            }();\n\n            UpdateAdmin =\n            /*#__PURE__*/\n            function () {\n              var _ref9 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee8(id, props) {\n                var username, password, stmt, result;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        username = props.username, password = props.password;\n\n                        if (!(!props && !(props.username && props.password))) {\n                          _context8.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a username or an password\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (username && password) {\n                          stmt = \"update Admin set UserName = '\".concat(username, \"', UserPassword = '\").concat(password, \"' where ID = \").concat(id, \" \");\n                          console.log(stmt);\n                        } else if (username && !password) {\n                          stmt = \"update Admin set UserName = '\".concat(username, \"' where ID = \").concat(id, \" \");\n                        } else {\n                          stmt = \"update Admin set  UserPassword = '\".concat(password, \"' where ID = \").concat(id, \" \");\n                        }\n\n                        _context8.prev = 5;\n                        _context8.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context8.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context8.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Admin with ID \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context8.abrupt(\"return\", true);\n\n                      case 15:\n                        _context8.prev = 15;\n                        _context8.t0 = _context8[\"catch\"](5);\n                        throw new Error(\"Could not update Admin with ID \".concat(id) + _context8.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[5, 15]]);\n              }));\n\n              return function UpdateAdmin(_x7, _x8) {\n                return _ref9.apply(this, arguments);\n              };\n            }();\n\n            ReadProduct =\n            /*#__PURE__*/\n            function () {\n              var _ref10 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee9() {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.prev = 0;\n                        _context9.next = 3;\n                        return db.all(\"SELECT * FROM Product \");\n\n                      case 3:\n                        rows = _context9.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context9.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Product list are empty!\");\n\n                      case 6:\n                        return _context9.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context9.prev = 9;\n                        _context9.t0 = _context9[\"catch\"](0);\n                        throw new Error(\"Could not retrieve any Product\");\n\n                      case 12:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9, null, [[0, 9]]);\n              }));\n\n              return function ReadProduct() {\n                return _ref10.apply(this, arguments);\n              };\n            }();\n\n            CreateProduct =\n            /*#__PURE__*/\n            function () {\n              var _ref11 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee10(props) {\n                var typename, result, id;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        typename = props.typename;\n\n                        if (!(!props || !typename)) {\n                          _context10.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide an type of the product\");\n\n                      case 3:\n                        _context10.prev = 3;\n                        _context10.next = 6;\n                        return db.run(\"INSERT INTO Product (TypeName) VALUES ('\".concat(typename, \"')\"));\n\n                      case 6:\n                        result = _context10.sent;\n                        id = result.stmt.lastID;\n                        return _context10.abrupt(\"return\", id);\n\n                      case 11:\n                        _context10.prev = 11;\n                        _context10.t0 = _context10[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 14:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[3, 11]]);\n              }));\n\n              return function CreateProduct(_x9) {\n                return _ref11.apply(this, arguments);\n              };\n            }();\n\n            DeleteProduct =\n            /*#__PURE__*/\n            function () {\n              var _ref12 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee11(id) {\n                var stmt, result;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        _context11.prev = 0;\n                        stmt = \"DELETE FROM Product WHERE IDproduct = \".concat(id);\n                        _context11.next = 4;\n                        return db.run(stmt);\n\n                      case 4:\n                        result = _context11.sent;\n\n                        if (!(result.stmt.changes === 0)) {\n                          _context11.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesn't exist\"));\n\n                      case 7:\n                        return _context11.abrupt(\"return\", true);\n\n                      case 10:\n                        _context11.prev = 10;\n                        _context11.t0 = _context11[\"catch\"](0);\n                        throw new Error(\"could not delete Product with id \".concat(id) + _context11.t0);\n\n                      case 13:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11, null, [[0, 10]]);\n              }));\n\n              return function DeleteProduct(_x10) {\n                return _ref12.apply(this, arguments);\n              };\n            }();\n\n            UpdateProduct =\n            /*#__PURE__*/\n            function () {\n              var _ref13 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee12(id, props) {\n                var typename, result;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        typename = props.typename;\n\n                        if (!(!props || !props.typename)) {\n                          _context12.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide type of the modal\");\n\n                      case 3:\n                        _context12.prev = 3;\n                        _context12.next = 6;\n                        return db.run(\"update Product set TypeName = '\".concat(typename, \"' where IDproduct = \").concat(id, \" \"));\n\n                      case 6:\n                        result = _context12.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context12.next = 9;\n                          break;\n                        }\n\n                        throw new Error(\"Product with ID \".concat(id, \" doesnt exist\"));\n\n                      case 9:\n                        return _context12.abrupt(\"return\", true);\n\n                      case 12:\n                        _context12.prev = 12;\n                        _context12.t0 = _context12[\"catch\"](3);\n                        throw new Error(\"Could not update Product with ID \".concat(id) + _context12.t0);\n\n                      case 15:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12, null, [[3, 12]]);\n              }));\n\n              return function UpdateProduct(_x11, _x12) {\n                return _ref13.apply(this, arguments);\n              };\n            }();\n\n            ReadColor =\n            /*#__PURE__*/\n            function () {\n              var _ref14 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee13() {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        _context13.prev = 0;\n                        _context13.next = 3;\n                        return db.all(\"SELECT * FROM Color\");\n\n                      case 3:\n                        rows = _context13.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context13.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Color list are empty!\");\n\n                      case 6:\n                        return _context13.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context13.prev = 9;\n                        _context13.t0 = _context13[\"catch\"](0);\n                        throw new Error(\"Could not retrieve any color\");\n\n                      case 12:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee13, null, [[0, 9]]);\n              }));\n\n              return function ReadColor() {\n                return _ref14.apply(this, arguments);\n              };\n            }();\n\n            UpdateColor =\n            /*#__PURE__*/\n            function () {\n              var _ref15 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee14(props) {\n                var type, color, stmt, result;\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                  while (1) {\n                    switch (_context14.prev = _context14.next) {\n                      case 0:\n                        type = props.type, color = props.color;\n\n                        if (!(!props && !(props.type && props.color))) {\n                          _context14.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a type witha color\");\n\n                      case 3:\n                        stmt = \"update Color set  color = '\".concat(color, \"' where type ='\").concat(type, \"' \");\n                        _context14.prev = 4;\n                        _context14.next = 7;\n                        return db.run(stmt);\n\n                      case 7:\n                        result = _context14.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context14.next = 11;\n                          break;\n                        }\n\n                        throw new Error(\"color with type \".concat(type, \" doesnt exist\"));\n\n                      case 11:\n                        return _context14.abrupt(\"return\", true);\n\n                      case 14:\n                        _context14.prev = 14;\n                        _context14.t0 = _context14[\"catch\"](4);\n                        throw new Error(\"Could not update color with type \".concat(type) + _context14.t0);\n\n                      case 17:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }\n                }, _callee14, null, [[4, 14]]);\n              }));\n\n              return function UpdateColor(_x13) {\n                return _ref15.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              ReadSubscribe: ReadSubscribe,\n              CreateSubscribe: CreateSubscribe,\n              DeleteSubscribe: DeleteSubscribe,\n              UpdateSubscribe: UpdateSubscribe,\n              ReadAdmin: ReadAdmin,\n              CreateAdmin: CreateAdmin,\n              DeleteAdmin: DeleteAdmin,\n              UpdateAdmin: UpdateAdmin,\n              ReadProduct: ReadProduct,\n              CreateProduct: CreateProduct,\n              DeleteProduct: DeleteProduct,\n              UpdateProduct: UpdateProduct,\n              ReadColor: ReadColor,\n              UpdateColor: UpdateColor\n            };\n            return _context15.abrupt(\"return\", controller);\n\n          case 19:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "initializeDatabase",
        "sqlite",
        "open",
        "db",
        "ReadSubscribe",
        "all",
        "rows",
        "length",
        "Error",
        "CreateSubscribe",
        "props",
        "location",
        "email",
        "run",
        "result",
        "id",
        "stmt",
        "lastID",
        "DeleteSubscribe",
        "changes",
        "UpdateSubscribe",
        "console",
        "log",
        "ReadAdmin",
        "CreateAdmin",
        "username",
        "password",
        "DeleteAdmin",
        "UpdateAdmin",
        "ReadProduct",
        "CreateProduct",
        "typename",
        "DeleteProduct",
        "UpdateProduct",
        "ReadColor",
        "UpdateColor",
        "type",
        "color",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/sandra/Desktop/prefab-houses/backend/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n \n\nconst initializeDatabase = async()=>{\n    const db = await sqlite.open('./database1.sqlite');\n\n\n\n\n\n\n   \n    const ReadSubscribe = async () =>{\n        try {\n            const rows = await db.all(`SELECT * FROM Subscribe order by Location `);\n            if (rows.length == 0) {\n              throw new Error(\"Subcribe are empty!\");\n            }\n            return rows;\n          } catch (err) {\n            throw new Error(\"Could not retrieve any Subscriber\");\n          }\n        };\n\n    const CreateSubscribe = async (props) => {\n        const { location, email } = props\n        \n        if (!props || !location || !email) {\n          throw new Error(`You must provide a location and email`);\n        }\n        try {\n        const result = await db.run(`INSERT INTO Subscribe (Location,Email) VALUES ('${location}', '${email}')`);\n        const id = result.stmt.lastID\n            return id\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n    const DeleteSubscribe = async (id) => {\n        try{\n          const result = await db.run(`DELETE FROM Subscribe WHERE ID = ${id}`);\n          if(result.stmt.changes === 0){\n            throw new Error(`Subscribe with id ${id} doesn't exist`); \n        }\n        return true;\n        }catch (err){\n          throw new Error(`could not delete subscriber with id ${id}` + err); \n        }\n    };\n\n    const UpdateSubscribe = async (id, props) => {\n      const { location, email } = props;\n      if (!props && !(props.location && props.email)) {\n        throw new Error(`You must provide a location or an email`);\n      }\n  \n      let stmt = \"\";\n      if (location && email) {\n        stmt = `update Subscribe set Location = '${location}', Email = '${email}' where ID = ${id} `;\n        console.log(stmt);\n      } else if (location && !email) {\n        stmt = `update Subscribe set Location = '${location}' where ID = ${id} `;\n      } else {\n        stmt = `update Subscribe set  Email = '${email}' where ID = ${id} `;\n      }\n      try {\n        const result = await db.run(stmt);\n        console.log(result);\n        if (result.stmt.changes == 0) {\n          throw new Error(`Subscribe with ID ${id} doesnt exist`);\n        }\n        return true;\n      } catch (err) {\n        throw new Error(`Could not update Subscribe with ID ${id}` + err);\n      }\n    };\n\n\n\n\n\n\n\n\n\n\n\n    const ReadAdmin = async () =>{\n      try {\n          const rows = await db.all(`SELECT * FROM Admin order by UserName `);\n          if (rows.length == 0) {\n            throw new Error(\"Admin list are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve any Admin\");\n        }\n      };\n\n  const CreateAdmin = async (props) => {\n      const { username, password } = props\n      \n      if (!props || !username || !password) {\n        throw new Error(`You must provide an username and password`);\n      }\n      try {\n      const result = await db.run(`INSERT INTO Admin (UserName,UserPassword) VALUES ('${username}', '${password}')`);\n      const id = result.stmt.lastID\n          return id\n      } catch (err) {\n        throw new Error(\"This combination doesnt work\");\n      }\n    };\n  \n  const DeleteAdmin = async (id) => {\n      try{\n        const result = await db.run(`DELETE FROM Admin WHERE ID = ${id}`);\n        if(result.stmt.changes === 0){\n          throw new Error(`Admin with id ${id} doesn't exist`); \n      }\n      return true;\n      }catch (err){\n        throw new Error(`could not delete admin with id ${id}` + err); \n      }\n  };\n\n  const UpdateAdmin = async (id, props) => {\n    const { username, password } = props;\n    if (!props && !(props.username && props.password)) {\n      throw new Error(`You must provide a username or an password`);\n    }\n\n    let stmt = \"\";\n    if (username && password) {\n      stmt = `update Admin set UserName = '${username}', UserPassword = '${password}' where ID = ${id} `;\n      console.log(stmt);\n    } else if (username && !password) {\n      stmt = `update Admin set UserName = '${username}' where ID = ${id} `;\n    } else {\n      stmt = `update Admin set  UserPassword = '${password}' where ID = ${id} `;\n    }\n    try {\n      const result = await db.run(stmt);\n      console.log(result);\n      if (result.stmt.changes == 0) {\n        throw new Error(`Admin with ID ${id} doesnt exist`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(`Could not update Admin with ID ${id}` + err);\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n  const ReadProduct = async () =>{\n    try {\n        const rows = await db.all(`SELECT * FROM Product `);\n        if (rows.length == 0) {\n          throw new Error(\"Product list are empty!\");\n        }\n        return rows;\n      } catch (err) {\n        throw new Error(\"Could not retrieve any Product\");\n      }\n    };\n\nconst CreateProduct = async (props) => {\n    const { typename} = props\n    \n    if (!props || !typename ) {\n      throw new Error(`You must provide an type of the product`);\n    }\n    try {\n    const result = await db.run(`INSERT INTO Product (TypeName) VALUES ('${typename}')`);\n    const id = result.stmt.lastID\n        return id\n    } catch (err) {\n      throw new Error(\"This combination doesnt work\");\n    }\n  };\n\nconst DeleteProduct = async (id) => {\n    try{\n      \n      const stmt=`DELETE FROM Product WHERE IDproduct = ${id}`;\n      \n      const result = await db.run(stmt);\n      if(result.stmt.changes === 0){\n        throw new Error(`Product with id ${id} doesn't exist`); \n    }\n    return true;\n    }catch (err){\n      throw new Error(`could not delete Product with id ${id}` + err); \n    }\n};\n\nconst UpdateProduct = async (id, props) => {\n  const { typename } = props;\n  if (!props || !props.typename) {\n    throw new Error(`You must provide type of the modal`);\n  }\n  try {\n    const result = await db.run( `update Product set TypeName = '${typename}' where IDproduct = ${id} `);\n    if (result.stmt.changes == 0) {\n      throw new Error(`Product with ID ${id} doesnt exist`);\n    }\n    return true;\n  } catch (err) {\n    throw new Error(`Could not update Product with ID ${id}` + err);\n  }\n};\n\n\n\n\n\n\n\n\n\n\nconst ReadColor = async () =>{\n  try {\n      const rows = await db.all(`SELECT * FROM Color`);\n      if (rows.length == 0) {\n        throw new Error(\"Color list are empty!\");\n      }\n      return rows;\n    } catch (err) {\n      throw new Error(\"Could not retrieve any color\");\n    }\n  };\n\n\n\nconst UpdateColor = async (props) => {\nconst { type, color } = props;\nif (!props && !(props.type && props.color)) {\n  throw new Error(`You must provide a type witha color`);\n}\n let stmt = `update Color set  color = '${color}' where type ='${type}' `;\n\ntry {\n  const result = await db.run(stmt);\n  console.log(result);\n  if (result.stmt.changes == 0) {\n    throw new Error(`color with type ${type} doesnt exist`);\n  }\n  return true;\n} catch (err) {\n  throw new Error(`Could not update color with type ${type}` + err);\n}\n};\n\n\n\n\n\n\n\n\n\n\n\n\n    const controller={\n        ReadSubscribe,\n        CreateSubscribe,\n        DeleteSubscribe,\n        UpdateSubscribe,\n\n        ReadAdmin,\n        CreateAdmin,\n        DeleteAdmin,\n        UpdateAdmin,\n\n        ReadProduct,\n        CreateProduct,\n        DeleteProduct,\n        UpdateProduct,\n\n        ReadColor,\n        UpdateColor\n\n\n    }\n    return controller;\n  \n}\n\nexport default  initializeDatabase ;\n\n    \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582031125913
  }
}